<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.autotrade.dao.ProjectDao">
	<!-- 维修项目表公共结果映射 -->
	<resultMap id="BaseResultMap" type="com.autotrade.entity.Project">
		<id column="id" jdbcType="BIGINT" property="id" />
		<id column="maintenance_type_id" jdbcType="BIGINT" property="maintenance_type_id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
	</resultMap>

	<!-- 维修项目表公共sql字段 -->
	<sql id="Base_Column_List">
		id, maintenance_type_id, name
	</sql>

	<!-- 插入全部字段 -->
	<insert id="insertAll" parameterType="com.autotrade.entity.Project">
		insert into t_project (id,
		maintenance_type_id, name)
		values (null,
		#{maintenance_type_id,jdbcType=BIGINT},
		#{name,jdbcType=VARCHAR})
	</insert>

	<!-- 插入指定数据 -->
	<insert id="insertSelective" parameterType="com.autotrade.entity.Project">
		insert into t_project
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="maintenance_type_id != null">
				maintenance_type_id,
			</if>
			<if test="name != null">
				name,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="maintenance_type_id != null">
				#{maintenance_type_id,jdbcType=BIGINT},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<!-- 通过指定条件查询 -->
	<select id="selectBySelective" parameterType="java.util.Map"
		resultType="com.autotrade.entityVo.ProjectVo">
		select t.id id,m.name names,t.name name from t_project t
		left join
		t_maintenance_type m on t.maintenance_type_id=m.id
		<where>
			<if test="projectName != null">
				t.name like concat('%', #{projectName}, '%')
			</if>
		</where>
		limit #{star},#{limit}
	</select>

	<!-- 查询总条数 -->
	<select id="getCount" parameterType="java.util.Map" resultType="int">
		select count(*)
		from t_project t
		left join t_maintenance_type m on
		t.maintenance_type_id=m.id
		<where>
			<if test="projectName != null">
				t.name like concat('%', #{projectName}, '%')
			</if>
		</where>
		limit #{star},#{limit}
	</select>


	<select id="selectAll" resultType="com.autotrade.entityVo.ProjectVo">

		select t.id id,m.name
		names,t.name name from t_project t
		left join t_maintenance_type m
		on
		t.maintenance_type_id=m.id
		limit #{star},#{limit}


	</select>
	<select id="selectAllbytype" resultType="com.autotrade.entityVo.ProjectVo">

		select t.id id,m.name
		names,t.name name from t_project t
		left join t_maintenance_type m
		on
		t.maintenance_type_id=m.id
		where t.name like concat('%', #{s}, '%')

		limit #{star},#{limit}


	</select>

	<select id="countAll" resultType="java.lang.Integer">
		select count(id) from t_project
		

	</select>

	<select id="countAllbytype" resultType="java.lang.Integer">
		select count(id) from
		t_project t where t.name like concat('%', #{s}, '%')

	</select>

	<insert id="AddRelation" parameterType="com.autotrade.entity.Relation">
		insert into t_relation
		(project_id,vehicle_classification_id,maintenance_parts_id,houser,price,create_time)
		VALUES
		(#{project_id},#{vehicle_classification_id},#{maintenance_parts_id},#{houser},#{price},NOW())

	</insert>

</mapper>

