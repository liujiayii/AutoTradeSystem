package com.autotrade.controller;

import java.math.BigDecimal;
import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.autotrade.entity.SellCar;
import com.autotrade.entityVo.SellCarVo;
import com.autotrade.entityVo.ShowCarVo;
import com.autotrade.service.SellCarService;
import com.autotrade.utils.JsonUtil;

/**
 * @ClassName: SellCarController
 * @description 售车模块控制器
 * @author ZhaoSong
 * @createDate 2019年1月29日
 */
@Controller
@RequestMapping("/sellCar")
public class SellCarController {

	@Autowired
	private SellCarService sellCarService;

	/**
	 * @Title: findByLimit
	 * @description 分页查询售车信息
	 * @param @param
	 *            page 页数
	 * @param @param
	 *            limit 每页显示的数量
	 * @return String JSON字符串，分页结果信息
	 * @author ZhaoSong
	 * @createDate 2019年1月29日
	 */
	@RequestMapping(value = "/findByLimit", produces = "application/json; charset=utf-8")
	@ResponseBody
	public String findByLimit(@RequestParam("page") Integer page, @RequestParam("limit") Integer limit) {
		if (page <= 0) {
			page = 1;
		}
		page = (page - 1) * limit;
		List<SellCarVo> lists = sellCarService.findByLimit(page, limit);
		try {
			if (lists.size() >= 1) {
				return JsonUtil.getResponseJson(1, "查询成功", sellCarService.findAllCount(), lists);
			} else {
				return JsonUtil.getResponseJson(1, "数据为空", sellCarService.findAllCount(), lists);
			}
		} catch (Exception e) {
			return JsonUtil.getResponseJson(-1, "系统异常" + e.getMessage(), null, null);
		}
	}

	/**
	 * @Title: findById
	 * @description 通过售车订单Id查询订单信息以及此订单所属用户信息
	 * @param @param
	 *            id 售车订单id
	 * @return String JSON字符串售车订单对象
	 * @author ZhaoSong
	 * @createDate 2019年1月30日
	 */
	@RequestMapping("/findById")
	@ResponseBody
	public String findById(@RequestParam("c_id") Integer id) {
		ShowCarVo showCarVo = sellCarService.findById(id);
		if (!showCarVo.equals(null)) {
			return JsonUtil.getResponseJson(1, "查询成功", null, showCarVo);
		} else {
			return JsonUtil.getResponseJson(-1, "系统异常,您访问的数据可能被管理员删除", null, null);
		}
	}

	/**
	 * @Title: updateSellCar
	 * @description 修改售车订单，根据id
	 * @param @param
	 *            sellCar 售车订单对象
	 * @param @param
	 *            firstPayment 首付
	 * @return String Json字符串，处理结果
	 * @author ZhaoSong
	 * @createDate 2019年1月30日
	 */
	@RequestMapping("/updateSellCar")
	@ResponseBody
	public String updateSellCar(@RequestParam("type") Integer type,
			@RequestParam("first_payment") BigDecimal first_payment,
			@RequestParam("monthly_supply") BigDecimal monthly_supply,
			@RequestParam("monthly_number") Integer monthly_number, @RequestParam("insurance") Integer insurance,
			@RequestParam("c_id") Integer c_id) {
		Integer row = sellCarService.updateSellCar(type, first_payment, monthly_supply, monthly_number, insurance,
				c_id);
		if (row == 1) {
			return JsonUtil.getResponseJson(1, "修改成功", null, null);
		} else {
			return JsonUtil.getResponseJson(-1, "系统异常，联系管理员", null, null);
		}
	}
	
	
	
	@RequestMapping(value = "/findByKeyWord", produces = "application/json; charset=utf-8")
	@ResponseBody
	public String findByKeyWord(String keyWord,Integer page,Integer limit){
		if (page <= 0) {
			page = 1;
		}
		page = (page - 1) * limit;
		keyWord = "%"+keyWord+"%";
		List<SellCarVo> lists = sellCarService.findByKeyWord(keyWord, page, limit);
		try {
			if (lists.size() >= 1) {
				return JsonUtil.getResponseJson(1, "查询成功", lists.size(), lists);
			} else {
				return JsonUtil.getResponseJson(1, "数据为空", lists.size(), lists);
			}
		} catch (Exception e) {
			return JsonUtil.getResponseJson(-1, "系统异常" + e.getMessage(), null, null);
		}
	}
	
	
	
	
	
	
	
	

}
